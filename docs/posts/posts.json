[
  {
    "path": "posts/2021-02-25-text-analysis/",
    "title": "Text Analysis",
    "description": "Text analysis of Good Omens by Neil Gaiman and Terry Pratchett.",
    "author": [
      {
        "name": "Marie",
        "url": {}
      }
    ],
    "date": "2021-02-25",
    "categories": [],
    "contents": "\r\n\r\nArmageddon Only Happens Once: Good Omens Text Analysis\r\n\r\nSynopsis: The world is going to end next Saturday, just before dinner, but it turns out there are a few problems — the Antichrist has been misplaced, the Four Horseman of the Apocalypse ride motorcycles and the representatives from heaven and hell decide that they like the human race. (Photo and synopsis credit: NPR)\r\n\r\n\r\nWord Counts Visualizations\r\nFigure 1. Word Count Plot\r\n\r\n\r\n\r\nhide\r\n\r\n#---------------------------------------\r\n# Text Wrangling\r\n#---------------------------------------\r\n\r\n# Read in Good Omens pdf\r\nomens_text <- pdf_text(here(\"_posts/2021-02-25-text-analysis\",\"Media\",\"GoodOmens.pdf\"))\r\n\r\n# Tidy\r\nomens_tidy <- data.frame(omens_text) %>% \r\n  mutate(text_full = str_split(omens_text, pattern = \"\\\\n\")) %>% \r\n  unnest(text_full) %>% \r\n  mutate(text_full = str_trim(text_full)) %>% \r\n  slice(-(63:109)) %>% # Skip character descriptions\r\n mutate(chapter = case_when(\r\n    str_detect(text_full, \"^In the beginning$|^Eleven years ago$|^Wednesday$|^Thursday$|^Friday$|^Saturday$|^Sunday$\") ~ text_full,\r\n    TRUE ~ NA_character_\r\n  )) %>% \r\n  fill(chapter) %>% \r\n  mutate(chapter = fct_relevel(chapter, \r\n            \"In the beginning\", \"Eleven years ago\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\")) %>%  # Set chapter order\r\n  unnest_tokens(word, text_full) %>% # Tokenize\r\n  mutate(word = str_replace(word, \"[0-9-]+\", NA_character_)) %>% # remove rogue page numbers\r\n  select(-omens_text) %>% \r\n  drop_na() %>% \r\n  anti_join(stop_words) # Remove stop-words\r\n\r\n# Get word counts of non stop-words\r\nnonstop_counts <- omens_tidy %>% \r\n  count(chapter, word)\r\n\r\n#---------------------------------------\r\n# Visualize top word counts by chapter\r\n#---------------------------------------\r\n\r\n# Find top 5 words by chapter\r\ntop_5_words <- nonstop_counts %>% \r\n  group_by(chapter) %>% \r\n  arrange(-n) %>% \r\n  slice(1:5)\r\n\r\n# Visualize top 5 words per chapter\r\n\r\nomens_palette <- c(\"#A6D3DD\", \"#FDF3B0\", \"#F0B140\", \"#B4B4B4\", \"#C6333B\", \"#671D21\", \"#070707\")\r\n\r\nggplot(data = top_5_words, aes(x = word, y = n)) +\r\n  geom_col(aes(fill = chapter), show.legend = FALSE) +\r\n  scale_fill_manual(values = omens_palette) +\r\n  facet_wrap(~chapter, scales = \"free\") +\r\n  theme_minimal() +\r\n  coord_flip() +\r\n  labs(title = \"Five most common words per chapter in Good Omens\",\r\n       x = \"Word\",\r\n       y = \"Number of occurences\") +\r\n    theme(plot.title = element_text(color=\"#C6333B\", \r\n                                  size=16,\r\n                                  face = \"bold\",\r\n                                  hjust = 0.5))\r\n\r\n\r\n\r\n\r\nFigure 2. Word Cloud Plot\r\n\r\n\r\n\r\nhide\r\n\r\n#---------------------------------------\r\n# Visualize top 100 words in book\r\n#---------------------------------------\r\n\r\nomens_top100 <- nonstop_counts %>% \r\n  arrange(-n) %>% \r\n  slice(1:100) %>% \r\n  mutate(angle = 90 * sample(c(0, 1), n(), replace = TRUE, prob = c(60, 40)))\r\n\r\nomens_cloud <- ggplot(data = omens_top100, aes(label = word)) +\r\n  geom_text_wordcloud(aes(color = n, \r\n                          size = n,\r\n                          angle = angle),\r\n                          shape = \"squares\") +\r\n  scale_size_area(max_size = 10) +\r\n  scale_color_gradientn(colors = c(low = \"#A6D3DD\", middle = \"#F0B140\", high = \"#C6333B\")) +\r\n  labs(title = \"Top 100 Words in Good Omens\") +\r\n  theme(plot.title = element_text(color=\"#C6333B\", \r\n                                  size = 16,\r\n                                  face = \"bold\",\r\n                                  hjust = 0.5))\r\n\r\n# Add background\r\nimg = here(\"_posts/2021-02-25-text-analysis\",\"Media\",\"angel-demon-buds.png\")\r\n\r\nggbackground(omens_cloud, img)\r\n\r\n\r\n\r\n\r\nSentiment Analysis\r\nFigure 3. Positive vs. Negative Sentiment Analysis\r\n\r\n\r\n\r\nhide\r\n\r\n#---------------------------------------\r\n# Sentiment analysis with afinn\r\n#---------------------------------------\r\n\r\n# Join afinn lexicon\r\nomens_afinn <- omens_tidy %>% \r\n  inner_join(get_sentiments(\"afinn\"))\r\n\r\n# Calculate mean score per chapter\r\nafinn_means <- omens_afinn %>% \r\n  group_by(chapter) %>% \r\n  summarize(mean_afinn = mean(value))\r\n\r\n# Visualize positive vs. negative sentiment per chapter\r\nggplot(data = afinn_means, \r\n       aes(x = fct_rev(as.factor(chapter)), \r\n           y = mean_afinn)) +\r\n  geom_col(aes(fill = chapter), show.legend = FALSE) +\r\n  scale_fill_manual(values = omens_palette) +\r\n  theme_minimal() +\r\n  labs(\r\n    title = \"Positive and negative sentiments by chapter\\n of of Good Omens\",\r\n    x = \"Chapter\",\r\n    y = \"Average Sentiment\"\r\n  ) +\r\n  theme(plot.title = element_text(color=\"#C6333B\", \r\n                                  size = 16,\r\n                                  face = \"bold\",\r\n                                  hjust = 0.5)) +\r\n  coord_flip()\r\n\r\n\r\n\r\n\r\nFigure 4. Sentiment Bins Plot\r\n\r\n\r\n\r\nhide\r\n\r\n#---------------------------------------\r\n# Sentiment analysis with nrc\r\n#---------------------------------------\r\n\r\n# join nrc lexicon\r\nomens_nrc <- omens_tidy %>% \r\n  inner_join(get_sentiments(\"nrc\"))\r\n\r\n# Get counts\r\nomens_nrc_counts <- omens_nrc %>% \r\n  count(chapter, sentiment)\r\n\r\n# Visualize sentiment bins by chapter\r\nggplot(data = omens_nrc_counts, aes(x = sentiment, y = n)) +\r\n  geom_col(aes(fill = chapter), show.legend = FALSE) +\r\n  scale_fill_manual(values = omens_palette) +\r\n  theme_minimal() +\r\n  labs(\r\n    title = \"Top sentiment bins by chapter of Good Omens\",\r\n    x = \"Chapter\",\r\n    y = \"Number of occurences\"\r\n  ) +\r\n  theme(plot.title = element_text(color=\"#C6333B\", \r\n                                  size = 16,\r\n                                  face = \"bold\",\r\n                                  hjust = 0.5)) +\r\n  facet_wrap(~chapter) +\r\n  coord_flip()\r\n\r\n\r\n\r\n\r\nReferences:  Gaiman, N., & Pratchett, T. (1990). Good Omens: The Nice and Accurate Prophecies of Agnes Nutter, Witch. London: Berkley Books.\r\nMohammad, S. & Turney, P. (3013). Crowdsourcing a Word-Emotion Association Lexicon. Computational Intelligence, 29 (3), 436-465.\r\nNielsen, F.A. (2011). A new ANEW: Evaluation of a word list for sentiment analysis in microblogs. Proceedings of the ESWC2011 Workshop on ‘Making Sense of Microposts’: Big things come in small packages 718 in CEUR Workshop Proceedings 93-98.\r\n\r\n\r\n\r\n",
    "preview": "posts/2021-02-25-text-analysis/text-analysis_files/figure-html5/unnamed-chunk-1-1.png",
    "last_modified": "2021-02-25T15:08:37-08:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-02-04-palmetto/",
    "title": "Binary Logistic Regression",
    "description": "Using binary regression to test the feasibility of using plant charecteristics to classify palmetto species.",
    "author": [
      {
        "name": "Marie",
        "url": {}
      }
    ],
    "date": "2021-01-25",
    "categories": [],
    "contents": "\r\nExplore differences in height, canopy length, canopy width, and number of green leaves between Serenoa repens and Sabal etonia\r\n\r\n\r\nhide\r\n\r\n#---------------------------------------\r\n# Data Exploration\r\n#---------------------------------------\r\n\r\n# Pairs Plot\r\npalmetto %>% \r\n  ggpairs(aes(color = species)) +\r\n  labs(title = \"Palmetto Pair Plot\") +\r\n  scale_fill_manual(values=c(\"seagreen3\", \"seagreen4\")) +\r\n  scale_color_manual(values=c(\"seagreen3\", \"seagreen4\")) +\r\n  theme_light()\r\n\r\n\r\n\r\n\r\nFigure 1. This pairs plot shows correlations and relationships between the variables we are considering. We can see how the species differ in height, canopy length, canopy width, and number of green leaves in the boxplots in the first row and histograms in the first column. We can also see correlations between variables such as plant height, canopy length, and canopy width appear to all be positively correlated with each other. The number of green leaves also appears to increase with height, length, and width, and we can also see a difference between groupings of the two species.\r\n\r\n\r\nhide\r\n\r\n# plant height\r\nheight_plot <- ggplot(data = palmetto, aes(x = height)) +\r\n  geom_histogram(aes(fill = species)) +\r\n  scale_fill_manual(values=c(\"seagreen3\", \"seagreen4\")) +\r\n  labs(title = \"Palmetto plant height by species\",\r\n       x = \"Plant Height (cm)\",\r\n       y = \"Count\") +\r\n  theme_minimal()\r\n\r\n# canopy length\r\nlength_plot <- ggplot(data = palmetto, aes(x = length)) +\r\n  geom_histogram(aes(fill = species)) +\r\n  scale_fill_manual(values=c(\"seagreen3\", \"seagreen4\")) +\r\n  labs(title = \"Canopy length by palmetto species\",\r\n       x = \"Canopy Length (cm)\",\r\n       y = \"Count\") +\r\n  theme_minimal()\r\n\r\n# canopy width\r\nwidth_plot <- ggplot(data = palmetto, aes(x = width)) +\r\n  geom_histogram(aes(fill = species)) +\r\n  scale_fill_manual(values=c(\"seagreen3\", \"seagreen4\")) +\r\n  labs(title = \"Canopy width by palmetto species\",\r\n       x = \"Canopy Width (cm)\",\r\n       y = \"Count\") +\r\n  theme_minimal()\r\n\r\n# green leaves\r\nleaves_plot <- ggplot(data = palmetto, aes(x = green_lvs)) +\r\n  geom_histogram(aes(fill = species)) +\r\n  scale_fill_manual(values=c(\"seagreen3\", \"seagreen4\")) +\r\n  labs(title = \"Number of green leaves by palmetto species\",\r\n       x = \"Numer of Green Leaves\",\r\n       y = \"Count\") +\r\n  theme_minimal()\r\n\r\nvariable_patchwork <- (length_plot|width_plot)/(height_plot|leaves_plot)\r\nvariable_patchwork\r\n\r\n\r\n\r\n\r\nFigure 2. Taking a closer look at each of the variables in histograms by species, we can see that there are more samples of Serenoa repens overall but that the two species have fairly normal and similar distributions expect for the number of green leaves variable, in which we can see that while the species have similar centers, Serenoa repens is skewed to the right in its distribution.\r\nBinary Regression\r\nBinary regression using plant height, canopy length, canopy width, and number of green leaves as predictor variables to test how they relate to the probability of the individual being Serenoa repens or Sabal etonia.\r\n\r\n\r\n\r\nhide\r\n\r\n#---------------------------------------\r\n# Binary regression\r\n#---------------------------------------\r\n\r\n#  Perform binary regression\r\npalmetto_blr <- glm(species ~ height + length + width + green_lvs, \r\n                            data = palmetto, \r\n                            family = \"binomial\")\r\n\r\n# View results\r\n# palmetto_blr\r\n# \r\n# summary(palmetto_blr)\r\n\r\n# Create tidy table\r\npalmetto_blr_tidy <- broom::tidy(palmetto_blr)\r\n\r\npalmetto_blr_tidy\r\n\r\n\r\n# A tibble: 5 x 5\r\n  term        estimate std.error statistic   p.value\r\n  <chr>          <dbl>     <dbl>     <dbl>     <dbl>\r\n1 (Intercept)  -3.23     0.142       -22.7 3.42e-114\r\n2 height        0.0292   0.00231      12.7 8.69e- 37\r\n3 length       -0.0458   0.00187     -24.6 3.73e-133\r\n4 width        -0.0394   0.00210     -18.8 1.05e- 78\r\n5 green_lvs     1.91     0.0389       49.1 0.       \r\n\r\nhide\r\n\r\n# Figure out how to keep kable from cutting off the p-value to 0 Grrrrr\r\n# kable(palmetto_blr_tidy) %>% \r\n#   kable_styling()\r\n\r\n\r\n\r\n\r\nThe results of the binary regression indicate that we expect the log odds of the plant being Serenoa repens instead of Sabal etonia to decrease by 0.029 for every cm gained in height. We’d expect the log odds of the plant being Serenoa repens to decrease by 1.908 for every additional green leaf. From these results, we would also expect the log odds of the plant being Serenoa repens to increase by -0.046 for every cm increase in canopy length and by log odds -0.039 for every cm increase in canopy width.\r\nPlant Classification\r\nTable 1. An evaluation of how accurate the model was at classifying the plants in the dataset as Serenoa repens or Sabal etonia based on the four variables and using a 50% cutoff. Overall, the model performed well. Of the 6,155 observations that were classified as Sabal etonia, 5701 or 92.6% were Sabal etonia. Of the 6,112 observations that were classified as Serenoa repens, 90.8% were correct.\r\n\r\n\r\n\r\nhide\r\n\r\n# Augment with fitted column showing probabilities of being a serenoa repens for each observation\r\npalmetto_blr_fitted <- palmetto_blr %>% \r\n  augment(type.predict = \"response\")\r\n\r\npalmetto_classify <- palmetto_blr_fitted %>% \r\n  select(species:.fitted) %>% \r\n  mutate(classified = case_when(.fitted < 0.5 ~ \"Sabal etonia\",\r\n                                .fitted > 0.5 ~ \"Serenoa repens\"))\r\n\r\n# Sabal etonia accuracy\r\naccuracy_sabal <- palmetto_classify %>% \r\n  select(species, classified) %>% \r\n  filter(species == \"Sabal etonia\") %>% \r\n  mutate(accuracy = case_when(classified == \"Sabal etonia\" ~ \"Correct\",\r\n                              classified == \"Serenoa repens\" ~ \"Incorrect\"))%>% \r\n  group_by(accuracy) %>% \r\n  count(accuracy) %>% \r\n  pivot_wider(names_from = accuracy, values_from = n) %>% \r\n  mutate(Species = \"Sabal etonia\") %>% \r\n  relocate(Species) %>% \r\n  adorn_percentages(denominator = \"row\") %>% \r\n  adorn_pct_formatting(digits = 1) %>%\r\n  adorn_ns(position = \"front\")\r\n\r\n# Serenoa repens accuracy\r\naccuracy_serenoa <- palmetto_classify %>% \r\n  select(species, classified) %>% \r\n  filter(species == \"Serenoa repens\") %>% \r\n  mutate(accuracy = case_when(classified == \"Serenoa repens\" ~ \"Correct\",\r\n                              classified == \"Sabal etonia\" ~ \"Incorrect\")) %>% \r\n  group_by(accuracy) %>% \r\n  count(accuracy) %>% \r\n  pivot_wider(names_from = accuracy, values_from = n) %>% \r\n  mutate(Species = \"Serenoa repens\") %>% \r\n  relocate(Species) %>% \r\n  adorn_percentages(denominator = \"row\") %>% \r\n  adorn_pct_formatting(digits = 1) %>%\r\n  adorn_ns(position = \"front\")\r\n\r\n# Join back together\r\npalmetto_accuracy <- bind_rows(accuracy_sabal, accuracy_serenoa)\r\n\r\nkable(palmetto_accuracy) %>% \r\n  kable_styling(bootstrap_options = c(\"hover\", \"condensed\", \"responsive\"))\r\n\r\n\r\n\r\nSpecies\r\n\r\n\r\nCorrect\r\n\r\n\r\nIncorrect\r\n\r\n\r\nSabal etonia\r\n\r\n\r\n5701 (92.6%)\r\n\r\n\r\n454 (7.4%)\r\n\r\n\r\nSerenoa repens\r\n\r\n\r\n5548 (90.8%)\r\n\r\n\r\n564 (9.2%)\r\n\r\n\r\n\r\n\r\n\r\n",
    "preview": "posts/2021-02-04-palmetto/palmetto_files/figure-html5/unnamed-chunk-1-1.png",
    "last_modified": "2021-02-25T14:08:08-08:00",
    "input_file": {}
  }
]
